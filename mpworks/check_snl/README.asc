http://the-huck.com[Patrick Huck] (https://github.com/tschaume[tschaume]), Oct-15-2014 +
*Under Development*

:toc:
:toc-placement: manual

[options="compact"]
toc::[]

SNL & SNL Group Checks for next-gen MP-ID
-----------------------------------------

Report
~~~~~~

ICSD / SNL Parse Failures
^^^^^^^^^^^^^^^^^^^^^^^^^

In 2012, MP imported a set of structures that MIT parsed from the ICSD
database. The issue was that a subset of the MIT structures contained sites with zero
occupancy which were propagated into the MP SNL database. The zero-occupancy sites caused
the structures to be incorrectly flagged as not ordered and hence the according
calculations were actually never run. Within the scope of preparing
`snlgroup_id(_final)` as next-gen mp-id, these parser failures need to be fixed
and structures resubmitted if zero-occupancy sites indeed affect the duplicate
checking (structure matching) and/or the space group assignment. We verified
the latter by taking an example zero-occupancy structure from the SNL database,
removing all the zero-occupancy sites from a copy of the structure and
comparing the two against each other. This procedure caused the duplicate
finder to fail right away. As for the spacegroup checker, it initially was not
affected by the presence or removal of zero-occupancy sites at symmetry space
points but could easily be coaxed into failure by adding a zero-occupancy site
at an off-symmetry space point. This should not happen since the structures
stay identical under addition or removal of zero-occupancy sites. Hence, all
structures with such zero-occupancy sites need: i) zero-occupancy sites
removed, ii) is_ordered re-evaluated, iii) spacegroup re-evaluated, and iv)
snlgroup re-evaluated. The MP's SNL database has been
link:occu_sites_query.py[queried] for all occurences of such zero-occupancy
structures link:results/zero_occu_sites.csv[resulting] in 127 affected SNLs out
of 411670 in total. The 38 SNLs that are missing the `icsd_id` have the
`is_valid` flag set to `False` and/or contain too many sites (>200?) to
actually be calculated anyway. Since there exists an updated ICSD database with
zero-occupancy sites removed already propagated into the `icsd_crystals_mit`
database, the above SNL entries can be corrected by simply deprecating them and
(re-)adding new SNLs via the `icsd_to_snl` converter. The affected
`snlgroup_ids` are then resubmitted for calculation. The new utility function
link:../snl_utils/utils.py[deprecate_snl()] deprecates an existing SNL by
adding 'DEPRECATED' to its `about.remarks` as well as to the SNLGroup's
`canonical_snl.about.remarks` if the SNL happens to be the canonical SNL of the
respective SNL group. For now, deprecated canoncial SNLs have not been replaced
with another non-deprecated member of the SNL group if existent.

SNL Group Cross Checks
^^^^^^^^^^^^^^^^^^^^^^

For a cross check of all SNL groups, we compare the canonical structures of all
SNL groups with same composition against each other via the 'fit' method of
`pymatgen.analysis.structure_matcher`:
[source,python]
----------------------------------------------
self._matcher = StructureMatcher(
    ltol=0.2, stol=0.3, angle_tol=5, primitive_cell=True, scale=True,
    attempt_supercell=False, comparator=ElementComparator()
    )
----------------------------------------------
A combination of canonical structures can either have different or same space
groups (SGs) with the latter currently determining classification in SNL
groups. A preliminary run over about 50k out of 172k SNL groups
link:results/bad_snlgroups_2.csv[results] in 3915 different compositions with
at least two SNL groups. 1327 SNL groups with different SGs, and 600 with the
same SGs match using the above `StructureMatcher` (also see
https://plot.ly/~tschaume/8[interactive plot]). In addition to composition,
`snlgroup_id`, `sg_num` and `task_id` for each combination of "bad" SNL groups,
the following 'deltas' have been added to the result list: i) `delta_energy`,
i.e. difference in `final_energy_per_atom`, ii) `delta_bandgap`, i.e.
difference in `band_gap.search_gap.band_gap`, iii) `delta_volume_per_atom`,
i.e. difference in volume over nsites, and iv) `rms_dist`, i.e.  return tuple
of `matcher.get_rms_dist()`. For the matching SNL groups with different SGs,
'different' canonical structures are separated from 'similar' ones (cf.
'scenario' column) via
[source,python]
-------------------------------------------------------
'different' if (delta_energy > 0.01 or delta_bandgap > 0.1) else 'similar'
-------------------------------------------------------
which results in 242 'different' vs. 328 'similar' canonical structures. Two
examples from both sides of the spectrum for each scenario are compared in the
following table.

[options="header"]
|=============================================
| | most different | least different | least similar | most similar
| *composition* | I1 Li1 O3 | Ba1 S3 V1 | Ba1 Fe1 O10 Si4 | Si2 Sr1
| *mp-id's* |
https://materialsproject.org/materials/mp-545343[mp-545343] +
https://materialsproject.org/materials/mp-22955[mp-22955] |
https://materialsproject.org/materials/mp-555857[mp-555857] +
https://materialsproject.org/materials/mp-4227[mp-4227] |
https://materialsproject.org/materials/mp-504885[mp-504885] +
https://materialsproject.org/materials/mp-603263[mp-603263] |
https://materialsproject.org/materials/mp-14172[mp-14172] +
https://materialsproject.org/materials/mp-496[mp-496]
| *delta_bandgap* | 3.65 | 0.0 | 0.0981 | 0.0
| *delta_energy* | 0.239 | 0.0104 | 9.08e-03 | 4.08e-3
| *delta_vol/atom* | 2.64 | 0.129 | 0.115 | 0.00155
|=============================================

Analysis Overview
~~~~~~~~~~~~~~~~~

Monitoring and Analysis via https://plot.ly[Plotly's] REST/Streaming API:
link:check_snl.py[check_snl.py] or link:builders.py[builders.py]

|===========================================================
| *Results:* +
link:results/bad_snls.csv[bad SNLs] from 'spacegroups' check +
link:results/bad_snlgroups.csv[bad SNL Groups] from 'groupmembers' check +
link:results/bad_snlgroups_2.csv[bad SNL Groups] from 'canonicals' check +
link:results/zero_occu_sites.csv[SNLs w/ zero-occupancy sites] .2+| *Video:* (click to view) +
image:http://share.gifyoutube.com/YO8W8G.gif["SNLs & SNL Groups Check",link="http://youtu.be/QjQXpgxSx7o"]
| *History:* +
'2014-09-25': http://youtu.be/QFPX5pvruMA[video], link:$$https://plot.ly/~tschaume/3$$[interactive plot] +
'2014-09-27': http://youtu.be/QjQXpgxSx7o[video], link:$$https://plot.ly/~tschaume/6$$[interactive plot] +
'2014-10-07': link:$$https://plot.ly/~tschaume/8$$[interactive plot]
2+| *Interactive Plot:* (click to view) +
image:https://www.evernote.com/shard/s192/sh/01d02d38-039b-4434-977e-3ffd0af72af3/d2452eb560ddd736b77f2fbc83a6e2c4/deep/0/SNL-Group-Checks-Stream.png["SNLs & SNL Groups Check", link="https://plot.ly/~tschaume/6"]
|===========================================================

// vim: set syntax=asciidoc:
